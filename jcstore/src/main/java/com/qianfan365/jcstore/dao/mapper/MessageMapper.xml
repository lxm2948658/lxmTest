<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianfan365.jcstore.dao.inter.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.qianfan365.jcstore.common.pojo.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="link_parameter" property="linkParameter" jdbcType="INTEGER" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="message_type" property="messageType" jdbcType="INTEGER" />
    <result column="label" property="label" jdbcType="INTEGER" />
    <result column="unread" property="unread" jdbcType="INTEGER" />
    <result column="home_read" property="homeRead" jdbcType="INTEGER" />
    <result column="receive" property="receive" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, content, link_parameter, link, message_type, label, unread, home_read, 
    receive, createtime, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qianfan365.jcstore.common.pojo.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianfan365.jcstore.common.pojo.MessageExample" >
    delete from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianfan365.jcstore.common.pojo.Message" useGeneratedKeys="true" keyProperty="id" >
    insert into message (user_id, content, link_parameter, 
      link, message_type, label, 
      unread, home_read, receive, 
      createtime, updatetime)
    values (#{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{linkParameter,jdbcType=INTEGER}, 
      #{link,jdbcType=VARCHAR}, #{messageType,jdbcType=INTEGER}, #{label,jdbcType=INTEGER}, 
      #{unread,jdbcType=INTEGER}, #{homeRead,jdbcType=INTEGER}, #{receive,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertBatch" parameterType="ArrayList" >  
    insert into message (user_id, content, link_parameter, link, message_type, label, createtime, updatetime)  
    values  
    <foreach collection="list" item="obj" index="index" separator="," >  
       (#{obj.userId,jdbcType=INTEGER},#{obj.content,jdbcType=VARCHAR}, #{obj.linkParameter,jdbcType=INTEGER},
       #{obj.link,jdbcType=VARCHAR}, #{obj.messageType,jdbcType=INTEGER}, #{obj.label,jdbcType=INTEGER},
       #{obj.createtime,jdbcType=TIMESTAMP},#{obj.updatetime,jdbcType=TIMESTAMP})
    </foreach>  
  </insert>
  <insert id="insertSelective" parameterType="com.qianfan365.jcstore.common.pojo.Message" useGeneratedKeys="true" keyProperty="id" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="linkParameter != null" >
        link_parameter,
      </if>
      <if test="link != null" >
        link,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="label != null" >
        label,
      </if>
      <if test="unread != null" >
        unread,
      </if>
      <if test="homeRead != null" >
        home_read,
      </if>
      <if test="receive != null" >
        receive,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="linkParameter != null" >
        #{linkParameter,jdbcType=INTEGER},
      </if>
      <if test="link != null" >
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="label != null" >
        #{label,jdbcType=INTEGER},
      </if>
      <if test="unread != null" >
        #{unread,jdbcType=INTEGER},
      </if>
      <if test="homeRead != null" >
        #{homeRead,jdbcType=INTEGER},
      </if>
      <if test="receive != null" >
        #{receive,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qianfan365.jcstore.common.pojo.MessageExample" resultType="java.lang.Integer" >
    select count(*) from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.linkParameter != null" >
        link_parameter = #{record.linkParameter,jdbcType=INTEGER},
      </if>
      <if test="record.link != null" >
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.messageType != null" >
        message_type = #{record.messageType,jdbcType=INTEGER},
      </if>
      <if test="record.label != null" >
        label = #{record.label,jdbcType=INTEGER},
      </if>
      <if test="record.unread != null" >
        unread = #{record.unread,jdbcType=INTEGER},
      </if>
      <if test="record.homeRead != null" >
        home_read = #{record.homeRead,jdbcType=INTEGER},
      </if>
      <if test="record.receive != null" >
        receive = #{record.receive,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      link_parameter = #{record.linkParameter,jdbcType=INTEGER},
      link = #{record.link,jdbcType=VARCHAR},
      message_type = #{record.messageType,jdbcType=INTEGER},
      label = #{record.label,jdbcType=INTEGER},
      unread = #{record.unread,jdbcType=INTEGER},
      home_read = #{record.homeRead,jdbcType=INTEGER},
      receive = #{record.receive,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianfan365.jcstore.common.pojo.Message" >
    update message
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="linkParameter != null" >
        link_parameter = #{linkParameter,jdbcType=INTEGER},
      </if>
      <if test="link != null" >
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="label != null" >
        label = #{label,jdbcType=INTEGER},
      </if>
      <if test="unread != null" >
        unread = #{unread,jdbcType=INTEGER},
      </if>
      <if test="homeRead != null" >
        home_read = #{homeRead,jdbcType=INTEGER},
      </if>
      <if test="receive != null" >
        receive = #{receive,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianfan365.jcstore.common.pojo.Message" >
    update message
    set user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      link_parameter = #{linkParameter,jdbcType=INTEGER},
      link = #{link,jdbcType=VARCHAR},
      message_type = #{messageType,jdbcType=INTEGER},
      label = #{label,jdbcType=INTEGER},
      unread = #{unread,jdbcType=INTEGER},
      home_read = #{homeRead,jdbcType=INTEGER},
      receive = #{receive,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>